<Window x:Class="InvoiceCreatorApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InvoiceCreatorApp.Views"
        xmlns:viewModel="clr-namespace:InvoiceCreatorApp.ViewModels"
        mc:Ignorable="d"
        Title="Invoice Creator App" Height="490" Width="800" Background="#FFC0E3EB">
    <Window.DataContext>
        <viewModel:MainWindowViewModel/>
    </Window.DataContext>


    <Window.Resources>
        <!-- Define button style -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
    CornerRadius="10"
    RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" 
                    VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#005a9e" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#007ACC" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#003366"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                                <Setter Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Existing UI elements in the first and second row -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- Your header or other elements here -->
        </StackPanel>

        <!-- Main content in the second row -->
        <Grid Grid.Row="1">
            <TextBlock x:Name="txtBlockCompanyName" HorizontalAlignment="Left" Margin="93,15,0,0" TextWrapping="Wrap" Text="WPFBau" VerticalAlignment="Top"/>
            <TextBox x:Name="txtCustomerName" HorizontalAlignment="Left" Margin="275,14,0,0" Text="{Binding CustomerName, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
            <TextBox x:Name="txtCustomerNumber" HorizontalAlignment="Left" Margin="521,14,0,0" Text="{Binding CustomerNumber, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
            <TextBox x:Name="txtDescriptionOfGoods" HorizontalAlignment="Left" Margin="130,286,0,0" Text="{Binding DescriptionOfGoods, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalAlignment="Top" Width="190"/>
            <TextBox x:Name="txtPricePerPiece" HorizontalAlignment="Left" Margin="130,317,0,0" Text="{Binding PricePerPiece, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
            <TextBox x:Name="txtNumberOfGoods" HorizontalAlignment="Left" Margin="130,348,0,0" Text="{Binding NumberOfGoods, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
            <Label x:Name="lblTotalTax" Content="Mehrwertsteuer:" HorizontalAlignment="Left" Margin="371,344,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblCompanyName" Content="Firmenname:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblCustomerName" Content="Kundenname:" HorizontalAlignment="Left" Margin="183,10,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblCustomerNumber" Content="Kundennummer:" HorizontalAlignment="Left" Margin="418,10,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblDescriptionOfGoods" Content="Bezeichnung:" HorizontalAlignment="Left" Margin="11,282,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblNumberOfGoods" Content="Menge:" HorizontalAlignment="Left" Margin="10,344,0,0" VerticalAlignment="Top"/>
            <Label x:Name="lblPricePerPiece" Content="Preis pro Stück:" HorizontalAlignment="Left" Margin="11,313,0,0" VerticalAlignment="Top"/>
            <TextBlock x:Name="txtbTotalTax" HorizontalAlignment="Left" Margin="479,349,0,0" TextWrapping="Wrap" Text="{Binding TotalTax}" VerticalAlignment="Top"/>
            <Label x:Name="lblFinalPrice" Content="Rechnungbetrag:" HorizontalAlignment="Left" Margin="366,370,0,0" VerticalAlignment="Top"/>
            <TextBlock x:Name="txtbFinalPrice" HorizontalAlignment="Left" Margin="479,375,0,0" TextWrapping="Wrap" Text="{Binding FinalPrice}" VerticalAlignment="Top"/>
            <DataGrid ItemsSource="{Binding oneInvoice}" AutoGenerateColumns="False" Margin="130,41,133,168" SelectedItem="{Binding SelectedItem}" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Pos." Binding="{Binding Position}" Width="40*"/>
                    <DataGridTextColumn Header="Bezeichnung" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="200"/>
                    <DataGridTextColumn Header="Menge" Binding="{Binding NumberOfGoods, UpdateSourceTrigger=PropertyChanged}" Width="60"/>
                    <DataGridTextColumn Header="Preis pro Stück" Binding="{Binding PricePerPiece, UpdateSourceTrigger=PropertyChanged}" Width="100"/>
                    <DataGridTextColumn Header="Gesamtpreis" Binding="{Binding NettoPrice, UpdateSourceTrigger=PropertyChanged}" Width="120*"/>
                </DataGrid.Columns>
            </DataGrid>
            <Label x:Name="lblNettoPreis" Content="Nettopreis:" HorizontalAlignment="Left" Margin="398,321,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.537,0.518"/>
            <TextBlock x:Name="txtbNettoPreis" HorizontalAlignment="Left" Margin="479,326,0,0" TextWrapping="Wrap" Text="{Binding TotalPrice}"  VerticalAlignment="Top"/>
            <TextBlock HorizontalAlignment="Left" Margin="545,326,0,0" TextWrapping="Wrap" Text="€" VerticalAlignment="Top"/>
            <TextBlock HorizontalAlignment="Left" Margin="545,349,0,0" TextWrapping="Wrap" Text="€" VerticalAlignment="Top"/>
            <TextBlock HorizontalAlignment="Left" Margin="545,375,0,0" TextWrapping="Wrap" Text="€" VerticalAlignment="Top"/>
        </Grid>

        <!-- StackPanel with buttons in the third row -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <Button x:Name="btnAddItem" Content="Artikel hinzufügen" Command="{Binding AddCommand}" Style="{StaticResource ButtonStyle}"/>
            <Button x:Name="btnDeleteItem" Content="Artikel löschen" Command="{Binding DeleteCommand}" Style="{StaticResource ButtonStyle}"/>
            <Button x:Name="btnUpdateItem" Content="Artikel aktualisieren" Command="{Binding UpdateCommand}" Style="{StaticResource ButtonStyle}"/>
            <Button x:Name="btnSaveInvoice" Content="Speichern Rechnung" Command="{Binding SaveCommand}" Style="{StaticResource ButtonStyle}"/>
        </StackPanel>
    </Grid>
</Window>
